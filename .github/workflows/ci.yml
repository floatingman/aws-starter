name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  DOCKER_HUB_REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, api, worker]
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        registry: ${{ env.DOCKER_HUB_REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata for GitHub Container Registry
      id: meta-ghcr
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Extract metadata for Docker Hub
      id: meta-dockerhub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_HUB_REGISTRY }}/${{ github.repository_owner }}/aws-starter-${{ matrix.service }}
        tags: |
          type=raw,value=latest

    - name: Build and push to GitHub Container Registry
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.service }}
        push: true
        tags: ${{ steps.meta-ghcr.outputs.tags }}
        labels: ${{ steps.meta-ghcr.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v5
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        context: ./${{ matrix.service }}
        push: true
        tags: ${{ steps.meta-dockerhub.outputs.tags }}
        labels: ${{ steps.meta-dockerhub.outputs.labels }}
        cache-from: type=gha

  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Start services
      run: |
        docker compose up -d
        sleep 30  # Wait for services to be ready

    - name: Test API endpoints
      run: |
        # Test API root endpoint
        curl -f http://localhost:8000/ || exit 1
        
        # Test health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Test frontend (through NGINX proxy)
        curl -f http://localhost:8080/ || exit 1
        curl -f http://localhost:8080/api/ || exit 1

    - name: Check worker logs
      run: |
        docker compose logs worker | grep "Heartbeat" || exit 1

    - name: Cleanup
      if: always()
      run: |
        docker compose down -v